-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_layer1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_V_ce0 : OUT STD_LOGIC;
    input_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    output_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    output_V_ce0 : OUT STD_LOGIC;
    output_V_we0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    output_V_ce1 : OUT STD_LOGIC;
    output_V_we1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_V_d1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of conv_layer1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv10_384 : STD_LOGIC_VECTOR (9 downto 0) := "1110000100";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv9_1C2 : STD_LOGIC_VECTOR (8 downto 0) := "111000010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv_1_weights_V_0_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_weights_V_0_0_ce0 : STD_LOGIC;
    signal conv_1_weights_V_0_0_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv_1_weights_V_0_0_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_weights_V_0_0_1_ce0 : STD_LOGIC;
    signal conv_1_weights_V_0_0_1_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv_1_weights_V_0_0_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_weights_V_0_0_2_ce0 : STD_LOGIC;
    signal conv_1_weights_V_0_0_2_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal conv_1_weights_V_0_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_weights_V_0_1_ce0 : STD_LOGIC;
    signal conv_1_weights_V_0_1_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv_1_weights_V_0_1_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_weights_V_0_1_1_ce0 : STD_LOGIC;
    signal conv_1_weights_V_0_1_1_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_weights_V_0_1_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_weights_V_0_1_2_ce0 : STD_LOGIC;
    signal conv_1_weights_V_0_1_2_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv_1_weights_V_0_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_weights_V_0_2_ce0 : STD_LOGIC;
    signal conv_1_weights_V_0_2_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv_1_weights_V_0_2_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_weights_V_0_2_1_ce0 : STD_LOGIC;
    signal conv_1_weights_V_0_2_1_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv_1_weights_V_0_2_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_weights_V_0_2_2_ce0 : STD_LOGIC;
    signal conv_1_weights_V_0_2_2_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_biases_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_biases_V_ce0 : STD_LOGIC;
    signal conv_1_biases_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_reg_430 : STD_LOGIC_VECTOR (9 downto 0);
    signal row_reg_441 : STD_LOGIC_VECTOR (4 downto 0);
    signal col_reg_453 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten7_reg_464 : STD_LOGIC_VECTOR (8 downto 0);
    signal row1_reg_475 : STD_LOGIC_VECTOR (4 downto 0);
    signal col2_reg_486 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_5_fu_503_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_5_reg_2537 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond3_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_238_cast_fu_553_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_238_cast_reg_2592 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_86_fu_557_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_86_reg_2598 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_86_0_0_1_fu_561_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_86_0_0_1_reg_2603 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_86_0_0_2_cast_fu_565_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_86_0_0_2_cast_reg_2608 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_86_0_1_fu_569_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_86_0_1_reg_2613 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_86_0_1_1_cast_fu_573_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_86_0_1_1_cast_reg_2618 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_86_0_1_2_fu_577_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_86_0_1_2_reg_2623 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_86_0_2_fu_581_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_86_0_2_reg_2628 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_86_0_2_1_fu_585_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_86_0_2_1_reg_2633 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_86_0_2_2_cast_fu_589_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_86_0_2_2_cast_reg_2638 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_24_cast_fu_619_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_24_cast_reg_2643 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_fu_623_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_reg_2648 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_flatten_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_2653 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_2653_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_633_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_next_reg_2657 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2662 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_mid2_fu_645_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal col_mid2_reg_2668 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_68_mid2_v_fu_659_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_68_mid2_v_reg_2676 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_83_fu_667_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_83_reg_2683 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1107_fu_686_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1107_reg_2694 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1108_reg_2699 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_12_fu_704_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_12_reg_2704 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state5_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal p_Val2_24_reg_2709 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1059_reg_2714 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_26_fu_799_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_26_reg_2724 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state6_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal r_V_12_0_0_1_fu_811_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_12_0_0_1_reg_2730 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_28_0_0_1_reg_2735 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1065_reg_2740 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_0_0_2_fu_834_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_83_0_0_2_reg_2745 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_130_fu_854_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_130_reg_2757 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_130_reg_2757_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_71_0_s_fu_860_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_71_0_s_reg_2762 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state7_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal p_v_fu_866_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_v_reg_2767 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_71_0_2_mid1_fu_873_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_71_0_2_mid1_reg_2774 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_0461_5_0_0_1_fu_1010_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0461_5_0_0_1_reg_2784 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_29_0_0_2_fu_1049_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_29_0_0_2_reg_2790 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state8_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal p_0461_5_0_0_2_fu_1148_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0461_5_0_0_2_reg_2801 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_1_fu_1160_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_12_0_1_reg_2807 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_28_0_1_reg_2812 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1076_reg_2817 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state9_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal p_0461_5_0_1_fu_1313_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0461_5_0_1_reg_2827 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_1_1_fu_1325_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_12_0_1_1_reg_2833 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_103_reg_2838 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1081_reg_2843 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_v4_fu_1348_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_v4_reg_2848 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state10_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal p_0461_5_0_1_1_fu_1488_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0461_5_0_1_1_reg_2859 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_1_2_fu_1500_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_12_0_1_2_reg_2865 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_28_0_1_2_reg_2870 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1086_reg_2875 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state11_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal p_0461_5_0_1_2_fu_1653_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0461_5_0_1_2_reg_2885 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_2_fu_1665_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_12_0_2_reg_2891 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_28_0_2_reg_2896 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1091_reg_2901 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state12_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal p_0461_5_0_2_fu_1818_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0461_5_0_2_reg_2911 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_2_1_fu_1830_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_12_0_2_1_reg_2917 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_28_0_2_1_reg_2922 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1096_reg_2927 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0461_5_0_2_1_fu_1972_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0461_5_0_2_1_reg_2932 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_2_2_fu_1984_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_12_0_2_2_reg_2938 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_105_reg_2943 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1101_reg_2948 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_151_cast_cast_fu_2007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_151_cast_cast_reg_2953 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1109_fu_2026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1109_reg_2958 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1110_fu_2032_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1110_reg_2964 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_demorgan_fu_2082_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_demorgan_reg_2970 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0461_5_0_2_2_fu_2211_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0461_5_0_2_2_reg_2975 : STD_LOGIC_VECTOR (7 downto 0);
    signal mask_fu_2222_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal mask_reg_2981 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1126_fu_2352_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1126_reg_2986 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond_flatten9_fu_2361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten9_reg_2991 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state18_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal exitcond_flatten9_reg_2991_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten9_reg_2991_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next8_fu_2367_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_mid2_v_fu_2393_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_v_reg_3000 : STD_LOGIC_VECTOR (4 downto 0);
    signal output_V_addr_reg_3005 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_V_addr_reg_3005_pp1_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal output_V_addr_reg_3005_pp1_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal col_3_1_fu_2457_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_0514_2_fu_2477_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0514_2_reg_3016 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_150_s_fu_2511_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_150_s_reg_3021 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state18 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal p_reg_418 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_phi_mux_indvar_flatten_phi_fu_434_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_row_phi_fu_445_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_col_phi_fu_457_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_row1_phi_fu_479_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal tmp_fu_509_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_fu_681_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_124_fu_733_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_127_fu_846_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_122_fu_886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal tmp_125_fu_1061_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal tmp_128_fu_1189_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal tmp_123_fu_1360_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal tmp_126_fu_1529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal tmp_129_fu_1694_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal tmp_260_cast_fu_2357_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_264_cast_fu_2452_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_111_fu_523_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_113_fu_535_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_cast_fu_531_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl1_cast_fu_543_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_114_fu_547_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1053_fu_593_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_cast_fu_601_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_76_cast_fu_609_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_s_fu_613_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_115_fu_653_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1055_fu_673_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_12_fu_704_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_12_fu_704_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1061_fu_727_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_68_mid2_cast_fu_738_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_118_fu_741_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1054_fu_750_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl2_cast_fu_754_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_242_cast_fu_746_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_90_0_cast_fu_775_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_25_fu_778_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1058_fu_768_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1060_fu_783_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_fu_791_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_0_1_fu_811_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_12_0_0_1_fu_811_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1069_fu_839_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_120_fu_762_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_108_cast_fu_851_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1056_fu_879_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_90_0_0_1_cast_fu_898_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_29_0_0_1_fu_901_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1064_fu_891_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1066_fu_906_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_0_0_1_fu_914_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_30_0_0_1_fu_922_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_5_0_0_1_fu_930_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_6_0_0_1_fu_933_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_0_0_1_fu_937_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal accumulation_V_0_0_1_fu_951_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1068_fu_956_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1067_fu_943_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_0_0_1_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_i_i122_0_not_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge38_0_0_1_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_0_1_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_0_0_1_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux7_0_0_1_fu_994_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_5_0_0_1_fu_1002_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_0_2_fu_1022_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_12_0_0_2_fu_1022_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_0_2_fu_1022_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1072_fu_1037_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_28_0_0_2_ca_fu_1027_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_90_0_0_2_cast_fu_1045_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1062_fu_1055_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_6_0_0_2_fu_1072_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_5_0_0_2_fu_1069_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_0_0_2_fu_1075_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_29_0_0_2_ca_fu_1066_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal accumulation_V_0_0_2_fu_1089_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1074_fu_1094_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1073_fu_1081_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_0_0_2_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_i_i122_0_not_109_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge38_0_0_2_fu_1114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_0_2_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_0_0_2_fu_1126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux7_0_0_2_fu_1132_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_5_0_0_2_fu_1140_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_1_fu_1160_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_12_0_1_fu_1160_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1070_fu_1183_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_90_0_1_cast_fu_1201_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_29_0_1_fu_1204_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1075_fu_1194_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1077_fu_1209_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_0_1_fu_1217_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_30_0_1_fu_1225_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_5_0_1_fu_1233_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_6_0_1_fu_1236_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_0_1_fu_1240_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal accumulation_V_0_1_fu_1254_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1079_fu_1259_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1078_fu_1246_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_0_1_fu_1267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_i_i122_0_not_103_fu_1285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge38_0_1_fu_1279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_1_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_0_1_fu_1291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux7_0_1_fu_1297_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_5_0_1_fu_1305_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_1_1_fu_1325_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_12_0_1_1_fu_1325_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1057_fu_1353_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_90_0_1_1_cast_fu_1375_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_104_fu_1372_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_29_0_1_1_fu_1378_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1080_fu_1365_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1082_fu_1384_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_0_1_1_fu_1392_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_30_0_1_1_fu_1400_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_5_0_1_1_fu_1408_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_6_0_1_1_fu_1411_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_0_1_1_fu_1415_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal accumulation_V_0_1_1_fu_1429_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1084_fu_1434_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1083_fu_1421_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_0_1_1_fu_1442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_i_i122_0_not_104_fu_1460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge38_0_1_1_fu_1454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_1_1_fu_1448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_0_1_1_fu_1466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux7_0_1_1_fu_1472_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_5_0_1_1_fu_1480_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_1_2_fu_1500_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_12_0_1_2_fu_1500_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1063_fu_1523_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_90_0_1_2_cast_fu_1541_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_29_0_1_2_fu_1544_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1085_fu_1534_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1087_fu_1549_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_0_1_2_fu_1557_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_30_0_1_2_fu_1565_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_5_0_1_2_fu_1573_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_6_0_1_2_fu_1576_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_0_1_2_fu_1580_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal accumulation_V_0_1_2_fu_1594_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1089_fu_1599_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1088_fu_1586_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_0_1_2_fu_1607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_i_i122_0_not_105_fu_1625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge38_0_1_2_fu_1619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_1_2_fu_1613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_0_1_2_fu_1631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux7_0_1_2_fu_1637_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_5_0_1_2_fu_1645_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_2_fu_1665_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_12_0_2_fu_1665_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1071_fu_1688_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_90_0_2_cast_fu_1706_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_29_0_2_fu_1709_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1090_fu_1699_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1092_fu_1714_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_0_2_fu_1722_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_30_0_2_fu_1730_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_5_0_2_fu_1738_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_6_0_2_fu_1741_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_0_2_fu_1745_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal accumulation_V_0_2_fu_1759_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1094_fu_1764_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1093_fu_1751_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_0_2_fu_1772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_i_i122_0_not_106_fu_1790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge38_0_2_fu_1784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_2_fu_1778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_0_2_fu_1796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux7_0_2_fu_1802_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_5_0_2_fu_1810_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_2_1_fu_1830_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_12_0_2_1_fu_1830_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_90_0_2_1_cast_fu_1860_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_29_0_2_1_fu_1863_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1095_fu_1853_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1097_fu_1868_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_0_2_1_fu_1876_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_30_0_2_1_fu_1884_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_5_0_2_1_fu_1892_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_6_0_2_1_fu_1895_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_0_2_1_fu_1899_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal accumulation_V_0_2_1_fu_1913_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1099_fu_1918_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1098_fu_1905_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_0_2_1_fu_1926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_i_i122_0_not_107_fu_1944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge38_0_2_1_fu_1938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_2_1_fu_1932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_0_2_1_fu_1950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux7_0_2_1_fu_1956_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_5_0_2_1_fu_1964_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_2_2_fu_1984_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_12_0_2_2_fu_1984_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_109_fu_2012_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2020_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1111_fu_2036_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1114_fu_2040_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1115_fu_2048_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1117_fu_2056_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1119_fu_2062_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1120_fu_2066_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1124_fu_2070_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1125_fu_2076_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_90_0_2_2_cast_fu_2098_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_106_fu_2095_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_29_0_2_2_fu_2101_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1100_fu_2088_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1102_fu_2107_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_0_2_2_fu_2115_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_30_0_2_2_fu_2123_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_5_0_2_2_fu_2131_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_6_0_2_2_fu_2134_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_0_2_2_fu_2138_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal accumulation_V_0_2_2_fu_2152_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1104_fu_2157_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1103_fu_2144_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_0_2_2_fu_2165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_i_i122_0_not_108_fu_2183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge38_0_2_2_fu_2177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_2_2_fu_2171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_0_2_2_fu_2189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux7_0_2_2_fu_2195_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_5_0_2_2_fu_2203_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1127_fu_2219_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal rhs_V_fu_2228_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_7_fu_2231_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_21_fu_2244_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1106_fu_2248_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1105_fu_2236_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_2256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_i_i_i_i77_0_s_fu_2274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_2268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_12_fu_2262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge17_fu_2280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_fu_2286_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_s_fu_2294_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0306_1_fu_2302_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1113_fu_2314_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1116_fu_2319_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1112_fu_2310_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1118_fu_2325_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1121_fu_2329_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1122_fu_2335_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1123_fu_2345_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond2_fu_2379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_3_fu_2373_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_cast_fu_2401_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_131_fu_2405_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1128_fu_2414_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl3_cast_fu_2418_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_261_cast_fu_2410_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal col2_mid2_fu_2385_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1129_fu_2432_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_132_fu_2426_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_114_cast_fu_2442_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_133_fu_2446_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1130_fu_2463_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_70_fu_2471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1131_fu_2467_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_116_fu_2485_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_70_1_fu_2505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_149_cast_fu_2495_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0514_2_cast_fu_2519_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_119_fu_2522_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal r_V_12_0_0_1_fu_811_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_12_0_0_2_fu_1022_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_12_0_1_1_fu_1325_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_12_0_1_2_fu_1500_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_12_0_1_fu_1160_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_12_0_2_1_fu_1830_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_12_0_2_2_fu_1984_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_12_0_2_fu_1665_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_12_fu_704_p10 : STD_LOGIC_VECTOR (11 downto 0);

    component conv_layer1_conv_1_weights_V_0_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component conv_layer1_conv_1_weights_V_0_0_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component conv_layer1_conv_1_weights_V_0_0_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component conv_layer1_conv_1_weights_V_0_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component conv_layer1_conv_1_weights_V_0_1_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component conv_layer1_conv_1_weights_V_0_1_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component conv_layer1_conv_1_weights_V_0_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component conv_layer1_conv_1_weights_V_0_2_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component conv_layer1_conv_1_weights_V_0_2_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component conv_layer1_conv_1_biases_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;



begin
    conv_1_weights_V_0_0_U : component conv_layer1_conv_1_weights_V_0_0
    generic map (
        DataWidth => 4,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_V_0_0_address0,
        ce0 => conv_1_weights_V_0_0_ce0,
        q0 => conv_1_weights_V_0_0_q0);

    conv_1_weights_V_0_0_1_U : component conv_layer1_conv_1_weights_V_0_0_1
    generic map (
        DataWidth => 4,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_V_0_0_1_address0,
        ce0 => conv_1_weights_V_0_0_1_ce0,
        q0 => conv_1_weights_V_0_0_1_q0);

    conv_1_weights_V_0_0_2_U : component conv_layer1_conv_1_weights_V_0_0_2
    generic map (
        DataWidth => 2,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_V_0_0_2_address0,
        ce0 => conv_1_weights_V_0_0_2_ce0,
        q0 => conv_1_weights_V_0_0_2_q0);

    conv_1_weights_V_0_1_U : component conv_layer1_conv_1_weights_V_0_1
    generic map (
        DataWidth => 4,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_V_0_1_address0,
        ce0 => conv_1_weights_V_0_1_ce0,
        q0 => conv_1_weights_V_0_1_q0);

    conv_1_weights_V_0_1_1_U : component conv_layer1_conv_1_weights_V_0_1_1
    generic map (
        DataWidth => 3,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_V_0_1_1_address0,
        ce0 => conv_1_weights_V_0_1_1_ce0,
        q0 => conv_1_weights_V_0_1_1_q0);

    conv_1_weights_V_0_1_2_U : component conv_layer1_conv_1_weights_V_0_1_2
    generic map (
        DataWidth => 4,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_V_0_1_2_address0,
        ce0 => conv_1_weights_V_0_1_2_ce0,
        q0 => conv_1_weights_V_0_1_2_q0);

    conv_1_weights_V_0_2_U : component conv_layer1_conv_1_weights_V_0_2
    generic map (
        DataWidth => 4,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_V_0_2_address0,
        ce0 => conv_1_weights_V_0_2_ce0,
        q0 => conv_1_weights_V_0_2_q0);

    conv_1_weights_V_0_2_1_U : component conv_layer1_conv_1_weights_V_0_2_1
    generic map (
        DataWidth => 4,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_V_0_2_1_address0,
        ce0 => conv_1_weights_V_0_2_1_ce0,
        q0 => conv_1_weights_V_0_2_1_q0);

    conv_1_weights_V_0_2_2_U : component conv_layer1_conv_1_weights_V_0_2_2
    generic map (
        DataWidth => 3,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_V_0_2_2_address0,
        ce0 => conv_1_weights_V_0_2_2_ce0,
        q0 => conv_1_weights_V_0_2_2_q0);

    conv_1_biases_V_U : component conv_layer1_conv_1_biases_V
    generic map (
        DataWidth => 3,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_biases_V_address0,
        ce0 => conv_1_biases_V_ce0,
        q0 => conv_1_biases_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state18) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state18)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state18);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    col2_reg_486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten9_fu_2361_p2 = ap_const_lv1_0))) then 
                col2_reg_486 <= col_3_1_fu_2457_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                col2_reg_486 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    col_reg_453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then 
                col_reg_453 <= tmp_83_0_0_2_reg_2745;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                col_reg_453 <= ap_const_lv5_1;
            end if; 
        end if;
    end process;

    indvar_flatten7_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten9_fu_2361_p2 = ap_const_lv1_0))) then 
                indvar_flatten7_reg_464 <= indvar_flatten_next8_fu_2367_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                indvar_flatten7_reg_464 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then 
                indvar_flatten_reg_430 <= indvar_flatten_next_reg_2657;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                indvar_flatten_reg_430 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    p_reg_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                p_reg_418 <= p_5_reg_2537;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_reg_418 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    row1_reg_475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten9_reg_2991 = ap_const_lv1_0))) then 
                row1_reg_475 <= tmp_mid2_v_reg_3000;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                row1_reg_475 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    row_reg_441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then 
                row_reg_441 <= p_v_reg_2767;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                row_reg_441 <= ap_const_lv5_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_627_p2 = ap_const_lv1_0))) then
                col_mid2_reg_2668 <= col_mid2_fu_645_p3;
                exitcond_reg_2662 <= exitcond_fu_639_p2;
                tmp_1107_reg_2694 <= tmp_1107_fu_686_p1;
                tmp_1108_reg_2699 <= tmp_83_fu_667_p2(4 downto 1);
                tmp_68_mid2_v_reg_2676 <= tmp_68_mid2_v_fu_659_p3;
                tmp_83_reg_2683 <= tmp_83_fu_667_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond_flatten9_reg_2991 <= exitcond_flatten9_fu_2361_p2;
                exitcond_flatten9_reg_2991_pp1_iter1_reg <= exitcond_flatten9_reg_2991;
                output_V_addr_reg_3005_pp1_iter1_reg <= output_V_addr_reg_3005;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                exitcond_flatten9_reg_2991_pp1_iter2_reg <= exitcond_flatten9_reg_2991_pp1_iter1_reg;
                output_V_addr_reg_3005_pp1_iter2_reg <= output_V_addr_reg_3005_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_2653 <= exitcond_flatten_fu_627_p2;
                exitcond_flatten_reg_2653_pp0_iter1_reg <= exitcond_flatten_reg_2653;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_2657 <= indvar_flatten_next_fu_633_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                lhs_V_reg_2648 <= lhs_V_fu_623_p1;
                p_Val2_24_cast_reg_2643 <= p_Val2_24_cast_fu_619_p1;
                    tmp_238_cast_reg_2592(9 downto 1) <= tmp_238_cast_fu_553_p1(9 downto 1);
                tmp_86_0_0_1_reg_2603 <= tmp_86_0_0_1_fu_561_p1;
                    tmp_86_0_0_2_cast_reg_2608(1 downto 0) <= tmp_86_0_0_2_cast_fu_565_p1(1 downto 0);
                tmp_86_0_1_1_cast_reg_2618 <= tmp_86_0_1_1_cast_fu_573_p1;
                tmp_86_0_1_2_reg_2623 <= tmp_86_0_1_2_fu_577_p1;
                tmp_86_0_1_reg_2613 <= tmp_86_0_1_fu_569_p1;
                tmp_86_0_2_1_reg_2633 <= tmp_86_0_2_1_fu_585_p1;
                tmp_86_0_2_2_cast_reg_2638 <= tmp_86_0_2_2_cast_fu_589_p1;
                tmp_86_0_2_reg_2628 <= tmp_86_0_2_fu_581_p1;
                tmp_86_reg_2598 <= tmp_86_fu_557_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_2653_pp0_iter1_reg = ap_const_lv1_0))) then
                mask_reg_2981 <= mask_fu_2222_p2;
                p_0461_5_0_2_2_reg_2975 <= p_0461_5_0_2_2_fu_2211_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten9_fu_2361_p2 = ap_const_lv1_0))) then
                output_V_addr_reg_3005 <= tmp_264_cast_fu_2452_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then
                p_0461_5_0_0_1_reg_2784 <= p_0461_5_0_0_1_fu_1010_p3;
                p_Val2_29_0_0_2_reg_2790 <= p_Val2_29_0_0_2_fu_1049_p2;
                tmp_71_0_s_reg_2762 <= tmp_71_0_s_fu_860_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then
                p_0461_5_0_0_2_reg_2801 <= p_0461_5_0_0_2_fu_1148_p3;
                p_Val2_28_0_1_reg_2812 <= r_V_12_0_1_fu_1160_p2(11 downto 4);
                r_V_12_0_1_reg_2807 <= r_V_12_0_1_fu_1160_p2;
                tmp_1076_reg_2817 <= r_V_12_0_1_fu_1160_p2(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then
                p_0461_5_0_1_1_reg_2859 <= p_0461_5_0_1_1_fu_1488_p3;
                p_Val2_28_0_1_2_reg_2870 <= r_V_12_0_1_2_fu_1500_p2(11 downto 4);
                p_v4_reg_2848 <= p_v4_fu_1348_p3;
                r_V_12_0_1_2_reg_2865 <= r_V_12_0_1_2_fu_1500_p2;
                tmp_1086_reg_2875 <= r_V_12_0_1_2_fu_1500_p2(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then
                p_0461_5_0_1_2_reg_2885 <= p_0461_5_0_1_2_fu_1653_p3;
                p_Val2_28_0_2_reg_2896 <= r_V_12_0_2_fu_1665_p2(11 downto 4);
                r_V_12_0_2_reg_2891 <= r_V_12_0_2_fu_1665_p2;
                tmp_1091_reg_2901 <= r_V_12_0_2_fu_1665_p2(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then
                p_0461_5_0_1_reg_2827 <= p_0461_5_0_1_fu_1313_p3;
                r_V_12_0_1_1_reg_2833 <= r_V_12_0_1_1_fu_1325_p2;
                tmp_103_reg_2838 <= r_V_12_0_1_1_fu_1325_p2(10 downto 4);
                tmp_1081_reg_2843 <= r_V_12_0_1_1_fu_1325_p2(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then
                p_0461_5_0_2_1_reg_2932 <= p_0461_5_0_2_1_fu_1972_p3;
                p_demorgan_reg_2970 <= p_demorgan_fu_2082_p2;
                r_V_12_0_2_2_reg_2938 <= r_V_12_0_2_2_fu_1984_p2;
                tmp_105_reg_2943 <= r_V_12_0_2_2_fu_1984_p2(10 downto 4);
                tmp_1101_reg_2948 <= r_V_12_0_2_2_fu_1984_p2(3 downto 3);
                tmp_1109_reg_2958 <= tmp_1109_fu_2026_p2;
                    tmp_1110_reg_2964(3) <= tmp_1110_fu_2032_p1(3);
                tmp_151_cast_cast_reg_2953 <= tmp_151_cast_cast_fu_2007_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then
                p_0461_5_0_2_reg_2911 <= p_0461_5_0_2_fu_1818_p3;
                p_Val2_28_0_2_1_reg_2922 <= r_V_12_0_2_1_fu_1830_p2(11 downto 4);
                r_V_12_0_2_1_reg_2917 <= r_V_12_0_2_1_fu_1830_p2;
                tmp_1096_reg_2927 <= r_V_12_0_2_1_fu_1830_p2(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_flatten9_reg_2991_pp1_iter1_reg = ap_const_lv1_0))) then
                p_0514_2_reg_3016 <= p_0514_2_fu_2477_p3;
                tmp_150_s_reg_3021 <= tmp_150_s_fu_2511_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                p_5_reg_2537 <= p_5_fu_503_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then
                p_Val2_24_reg_2709 <= r_V_12_fu_704_p2(11 downto 4);
                r_V_12_reg_2704 <= r_V_12_fu_704_p2;
                tmp_1059_reg_2714 <= r_V_12_fu_704_p2(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then
                p_Val2_26_reg_2724 <= p_Val2_26_fu_799_p3;
                p_Val2_28_0_0_1_reg_2735 <= r_V_12_0_0_1_fu_811_p2(11 downto 4);
                r_V_12_0_0_1_reg_2730 <= r_V_12_0_0_1_fu_811_p2;
                tmp_1065_reg_2740 <= r_V_12_0_0_1_fu_811_p2(3 downto 3);
                tmp_130_reg_2757 <= tmp_130_fu_854_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then
                p_v_reg_2767 <= p_v_fu_866_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_2653_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_1126_reg_2986 <= tmp_1126_fu_2352_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_130_reg_2757_pp0_iter1_reg <= tmp_130_reg_2757;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond_reg_2662 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then
                tmp_71_0_2_mid1_reg_2774 <= tmp_71_0_2_mid1_fu_873_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then
                tmp_83_0_0_2_reg_2745 <= tmp_83_0_0_2_fu_834_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten9_fu_2361_p2 = ap_const_lv1_0))) then
                tmp_mid2_v_reg_3000 <= tmp_mid2_v_fu_2393_p3;
            end if;
        end if;
    end process;
    tmp_238_cast_reg_2592(0) <= '0';
    tmp_86_0_0_2_cast_reg_2608(9 downto 2) <= "00000000";
    tmp_1110_reg_2964(2 downto 0) <= "000";
    tmp_1110_reg_2964(4) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond3_fu_497_p2, exitcond_flatten_fu_627_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, exitcond_flatten9_fu_2361_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage8_subdone, ap_block_pp0_stage3_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_497_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_627_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_627_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond_flatten9_fu_2361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond_flatten9_fu_2361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    accumulation_V_0_0_1_fu_951_p2 <= std_logic_vector(signed(p_Val2_30_0_0_1_fu_922_p3) + signed(p_Val2_26_reg_2724));
    accumulation_V_0_0_2_fu_1089_p2 <= std_logic_vector(signed(p_0461_5_0_0_1_reg_2784) + signed(p_Val2_29_0_0_2_ca_fu_1066_p1));
    accumulation_V_0_1_1_fu_1429_p2 <= std_logic_vector(signed(p_Val2_30_0_1_1_fu_1400_p3) + signed(p_0461_5_0_1_reg_2827));
    accumulation_V_0_1_2_fu_1594_p2 <= std_logic_vector(signed(p_Val2_30_0_1_2_fu_1565_p3) + signed(p_0461_5_0_1_1_reg_2859));
    accumulation_V_0_1_fu_1254_p2 <= std_logic_vector(signed(p_Val2_30_0_1_fu_1225_p3) + signed(p_0461_5_0_0_2_reg_2801));
    accumulation_V_0_2_1_fu_1913_p2 <= std_logic_vector(signed(p_Val2_30_0_2_1_fu_1884_p3) + signed(p_0461_5_0_2_reg_2911));
    accumulation_V_0_2_2_fu_2152_p2 <= std_logic_vector(signed(p_Val2_30_0_2_2_fu_2123_p3) + signed(p_0461_5_0_2_1_reg_2932));
    accumulation_V_0_2_fu_1759_p2 <= std_logic_vector(signed(p_Val2_30_0_2_fu_1730_p3) + signed(p_0461_5_0_1_2_reg_2885));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(11);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(13);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state17 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(14);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(exitcond_flatten_fu_627_p2)
    begin
        if ((exitcond_flatten_fu_627_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state18_assign_proc : process(exitcond_flatten9_fu_2361_p2)
    begin
        if ((exitcond_flatten9_fu_2361_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state18 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond3_fu_497_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_497_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_col_phi_fu_457_p4_assign_proc : process(col_reg_453, exitcond_flatten_reg_2653, ap_CS_fsm_pp0_stage0, tmp_83_0_0_2_reg_2745, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then 
            ap_phi_mux_col_phi_fu_457_p4 <= tmp_83_0_0_2_reg_2745;
        else 
            ap_phi_mux_col_phi_fu_457_p4 <= col_reg_453;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_434_p4_assign_proc : process(indvar_flatten_reg_430, exitcond_flatten_reg_2653, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_2657, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_434_p4 <= indvar_flatten_next_reg_2657;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_434_p4 <= indvar_flatten_reg_430;
        end if; 
    end process;


    ap_phi_mux_row1_phi_fu_479_p4_assign_proc : process(row1_reg_475, exitcond_flatten9_reg_2991, ap_CS_fsm_pp1_stage0, tmp_mid2_v_reg_3000, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten9_reg_2991 = ap_const_lv1_0))) then 
            ap_phi_mux_row1_phi_fu_479_p4 <= tmp_mid2_v_reg_3000;
        else 
            ap_phi_mux_row1_phi_fu_479_p4 <= row1_reg_475;
        end if; 
    end process;


    ap_phi_mux_row_phi_fu_445_p4_assign_proc : process(row_reg_441, exitcond_flatten_reg_2653, ap_CS_fsm_pp0_stage0, p_v_reg_2767, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_2653 = ap_const_lv1_0))) then 
            ap_phi_mux_row_phi_fu_445_p4 <= p_v_reg_2767;
        else 
            ap_phi_mux_row_phi_fu_445_p4 <= row_reg_441;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond3_fu_497_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_497_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge17_fu_2280_p2 <= (tmp_1106_fu_2248_p3 or signbit_i_i_i_i77_0_s_fu_2274_p2);
    brmerge38_0_0_1_fu_976_p2 <= (tmp_1068_fu_956_p3 xor tmp_1067_fu_943_p3);
    brmerge38_0_0_2_fu_1114_p2 <= (tmp_1074_fu_1094_p3 xor tmp_1073_fu_1081_p3);
    brmerge38_0_1_1_fu_1454_p2 <= (tmp_1084_fu_1434_p3 xor tmp_1083_fu_1421_p3);
    brmerge38_0_1_2_fu_1619_p2 <= (tmp_1089_fu_1599_p3 xor tmp_1088_fu_1586_p3);
    brmerge38_0_1_fu_1279_p2 <= (tmp_1079_fu_1259_p3 xor tmp_1078_fu_1246_p3);
    brmerge38_0_2_1_fu_1938_p2 <= (tmp_1099_fu_1918_p3 xor tmp_1098_fu_1905_p3);
    brmerge38_0_2_2_fu_2177_p2 <= (tmp_1104_fu_2157_p3 xor tmp_1103_fu_2144_p3);
    brmerge38_0_2_fu_1784_p2 <= (tmp_1094_fu_1764_p3 xor tmp_1093_fu_1751_p3);
    brmerge39_0_0_1_fu_988_p2 <= (tmp_1068_fu_956_p3 or signbit_i_i122_0_not_fu_982_p2);
    brmerge39_0_0_2_fu_1126_p2 <= (tmp_1074_fu_1094_p3 or signbit_i_i122_0_not_109_fu_1120_p2);
    brmerge39_0_1_1_fu_1466_p2 <= (tmp_1084_fu_1434_p3 or signbit_i_i122_0_not_104_fu_1460_p2);
    brmerge39_0_1_2_fu_1631_p2 <= (tmp_1089_fu_1599_p3 or signbit_i_i122_0_not_105_fu_1625_p2);
    brmerge39_0_1_fu_1291_p2 <= (tmp_1079_fu_1259_p3 or signbit_i_i122_0_not_103_fu_1285_p2);
    brmerge39_0_2_1_fu_1950_p2 <= (tmp_1099_fu_1918_p3 or signbit_i_i122_0_not_107_fu_1944_p2);
    brmerge39_0_2_2_fu_2189_p2 <= (tmp_1104_fu_2157_p3 or signbit_i_i122_0_not_108_fu_2183_p2);
    brmerge39_0_2_fu_1796_p2 <= (tmp_1094_fu_1764_p3 or signbit_i_i122_0_not_106_fu_1790_p2);
    brmerge_fu_2268_p2 <= (tmp_1106_fu_2248_p3 xor tmp_1105_fu_2236_p3);
    col2_mid2_fu_2385_p3 <= 
        ap_const_lv5_0 when (exitcond2_fu_2379_p2(0) = '1') else 
        col2_reg_486;
    col_3_1_fu_2457_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(col2_mid2_fu_2385_p3));
    col_mid2_fu_645_p3 <= 
        ap_const_lv5_1 when (exitcond_fu_639_p2(0) = '1') else 
        ap_phi_mux_col_phi_fu_457_p4;
    conv_1_biases_V_address0 <= tmp_fu_509_p1(3 - 1 downto 0);

    conv_1_biases_V_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_biases_V_ce0 <= ap_const_logic_1;
        else 
            conv_1_biases_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_weights_V_0_0_1_address0 <= tmp_fu_509_p1(3 - 1 downto 0);

    conv_1_weights_V_0_0_1_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_weights_V_0_0_1_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_V_0_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_weights_V_0_0_2_address0 <= tmp_fu_509_p1(3 - 1 downto 0);

    conv_1_weights_V_0_0_2_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_weights_V_0_0_2_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_V_0_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_weights_V_0_0_address0 <= tmp_fu_509_p1(3 - 1 downto 0);

    conv_1_weights_V_0_0_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_weights_V_0_0_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_weights_V_0_1_1_address0 <= tmp_fu_509_p1(3 - 1 downto 0);

    conv_1_weights_V_0_1_1_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_weights_V_0_1_1_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_V_0_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_weights_V_0_1_2_address0 <= tmp_fu_509_p1(3 - 1 downto 0);

    conv_1_weights_V_0_1_2_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_weights_V_0_1_2_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_V_0_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_weights_V_0_1_address0 <= tmp_fu_509_p1(3 - 1 downto 0);

    conv_1_weights_V_0_1_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_weights_V_0_1_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_V_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_weights_V_0_2_1_address0 <= tmp_fu_509_p1(3 - 1 downto 0);

    conv_1_weights_V_0_2_1_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_weights_V_0_2_1_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_V_0_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_weights_V_0_2_2_address0 <= tmp_fu_509_p1(3 - 1 downto 0);

    conv_1_weights_V_0_2_2_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_weights_V_0_2_2_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_V_0_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_weights_V_0_2_address0 <= tmp_fu_509_p1(3 - 1 downto 0);

    conv_1_weights_V_0_2_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_weights_V_0_2_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_V_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_fu_2379_p2 <= "1" when (col2_reg_486 = ap_const_lv5_1E) else "0";
    exitcond3_fu_497_p2 <= "1" when (p_reg_418 = ap_const_lv3_6) else "0";
    exitcond_flatten9_fu_2361_p2 <= "1" when (indvar_flatten7_reg_464 = ap_const_lv9_1C2) else "0";
    exitcond_flatten_fu_627_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_434_p4 = ap_const_lv10_384) else "0";
    exitcond_fu_639_p2 <= "1" when (ap_phi_mux_col_phi_fu_457_p4 = ap_const_lv5_1F) else "0";
    indvar_flatten_next8_fu_2367_p2 <= std_logic_vector(unsigned(indvar_flatten7_reg_464) + unsigned(ap_const_lv9_1));
    indvar_flatten_next_fu_633_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_434_p4) + unsigned(ap_const_lv10_1));

    input_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage0, tmp_121_fu_681_p1, tmp_124_fu_733_p1, ap_block_pp0_stage1, tmp_127_fu_846_p1, ap_block_pp0_stage2, tmp_122_fu_886_p1, ap_block_pp0_stage3, tmp_125_fu_1061_p1, ap_block_pp0_stage4, tmp_128_fu_1189_p1, ap_block_pp0_stage5, tmp_123_fu_1360_p1, ap_block_pp0_stage6, tmp_126_fu_1529_p1, ap_block_pp0_stage7, tmp_129_fu_1694_p1, ap_block_pp0_stage8)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                input_V_address0 <= tmp_129_fu_1694_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                input_V_address0 <= tmp_126_fu_1529_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                input_V_address0 <= tmp_123_fu_1360_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                input_V_address0 <= tmp_128_fu_1189_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                input_V_address0 <= tmp_125_fu_1061_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                input_V_address0 <= tmp_122_fu_886_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                input_V_address0 <= tmp_127_fu_846_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_V_address0 <= tmp_124_fu_733_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_V_address0 <= tmp_121_fu_681_p1(10 - 1 downto 0);
            else 
                input_V_address0 <= "XXXXXXXXXX";
            end if;
        else 
            input_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    input_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input_V_ce0 <= ap_const_logic_1;
        else 
            input_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        lhs_V_5_0_0_1_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_26_reg_2724),9));

        lhs_V_5_0_0_2_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0461_5_0_0_1_reg_2784),9));

        lhs_V_5_0_1_1_fu_1408_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0461_5_0_1_reg_2827),9));

        lhs_V_5_0_1_2_fu_1573_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0461_5_0_1_1_reg_2859),9));

        lhs_V_5_0_1_fu_1233_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0461_5_0_0_2_reg_2801),9));

        lhs_V_5_0_2_1_fu_1892_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0461_5_0_2_reg_2911),9));

        lhs_V_5_0_2_2_fu_2131_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0461_5_0_2_1_reg_2932),9));

        lhs_V_5_0_2_fu_1738_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0461_5_0_1_2_reg_2885),9));

        lhs_V_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_613_p2),9));

    mask_fu_2222_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv2_1),to_integer(unsigned('0' & tmp_1127_fu_2219_p1(2-1 downto 0)))));

    output_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp1_stage0, output_V_addr_reg_3005, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_block_pp0_stage3, tmp_260_cast_fu_2357_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            output_V_address0 <= output_V_addr_reg_3005;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            output_V_address0 <= tmp_260_cast_fu_2357_p1(12 - 1 downto 0);
        else 
            output_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    output_V_address1 <= output_V_addr_reg_3005_pp1_iter2_reg;

    output_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            output_V_ce0 <= ap_const_logic_1;
        else 
            output_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_V_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            output_V_ce1 <= ap_const_logic_1;
        else 
            output_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_V_d0 <= tmp_1126_reg_2986;
    output_V_d1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_119_fu_2522_p3),16));

    output_V_we0_assign_proc : process(exitcond_flatten_reg_2653_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, mask_reg_2981, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_2653_pp0_iter1_reg = ap_const_lv1_0))) then 
            output_V_we0 <= mask_reg_2981;
        else 
            output_V_we0 <= ap_const_lv2_0;
        end if; 
    end process;


    output_V_we1_assign_proc : process(ap_block_pp1_stage0_11001, exitcond_flatten9_reg_2991_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (exitcond_flatten9_reg_2991_pp1_iter2_reg = ap_const_lv1_0))) then 
            output_V_we1 <= ap_const_lv2_3;
        else 
            output_V_we1 <= ap_const_lv2_0;
        end if; 
    end process;

    p_0306_1_fu_2302_p3 <= 
        p_mux_fu_2286_p3 when (brmerge17_fu_2280_p2(0) = '1') else 
        p_s_fu_2294_p3;
    p_0461_5_0_0_1_fu_1010_p3 <= 
        p_mux7_0_0_1_fu_994_p3 when (brmerge39_0_0_1_fu_988_p2(0) = '1') else 
        p_5_0_0_1_fu_1002_p3;
    p_0461_5_0_0_2_fu_1148_p3 <= 
        p_mux7_0_0_2_fu_1132_p3 when (brmerge39_0_0_2_fu_1126_p2(0) = '1') else 
        p_5_0_0_2_fu_1140_p3;
    p_0461_5_0_1_1_fu_1488_p3 <= 
        p_mux7_0_1_1_fu_1472_p3 when (brmerge39_0_1_1_fu_1466_p2(0) = '1') else 
        p_5_0_1_1_fu_1480_p3;
    p_0461_5_0_1_2_fu_1653_p3 <= 
        p_mux7_0_1_2_fu_1637_p3 when (brmerge39_0_1_2_fu_1631_p2(0) = '1') else 
        p_5_0_1_2_fu_1645_p3;
    p_0461_5_0_1_fu_1313_p3 <= 
        p_mux7_0_1_fu_1297_p3 when (brmerge39_0_1_fu_1291_p2(0) = '1') else 
        p_5_0_1_fu_1305_p3;
    p_0461_5_0_2_1_fu_1972_p3 <= 
        p_mux7_0_2_1_fu_1956_p3 when (brmerge39_0_2_1_fu_1950_p2(0) = '1') else 
        p_5_0_2_1_fu_1964_p3;
    p_0461_5_0_2_2_fu_2211_p3 <= 
        p_mux7_0_2_2_fu_2195_p3 when (brmerge39_0_2_2_fu_2189_p2(0) = '1') else 
        p_5_0_2_2_fu_2203_p3;
    p_0461_5_0_2_fu_1818_p3 <= 
        p_mux7_0_2_fu_1802_p3 when (brmerge39_0_2_fu_1796_p2(0) = '1') else 
        p_5_0_2_fu_1810_p3;
    p_0514_2_cast_fu_2519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0514_2_reg_3016),8));
    p_0514_2_fu_2477_p3 <= 
        tmp_1131_fu_2467_p1 when (tmp_70_fu_2471_p2(0) = '1') else 
        ap_const_lv7_0;
    p_5_0_0_1_fu_1002_p3 <= 
        ap_const_lv8_80 when (underflow_0_0_1_fu_970_p2(0) = '1') else 
        accumulation_V_0_0_1_fu_951_p2;
    p_5_0_0_2_fu_1140_p3 <= 
        ap_const_lv8_80 when (underflow_0_0_2_fu_1108_p2(0) = '1') else 
        accumulation_V_0_0_2_fu_1089_p2;
    p_5_0_1_1_fu_1480_p3 <= 
        ap_const_lv8_80 when (underflow_0_1_1_fu_1448_p2(0) = '1') else 
        accumulation_V_0_1_1_fu_1429_p2;
    p_5_0_1_2_fu_1645_p3 <= 
        ap_const_lv8_80 when (underflow_0_1_2_fu_1613_p2(0) = '1') else 
        accumulation_V_0_1_2_fu_1594_p2;
    p_5_0_1_fu_1305_p3 <= 
        ap_const_lv8_80 when (underflow_0_1_fu_1273_p2(0) = '1') else 
        accumulation_V_0_1_fu_1254_p2;
    p_5_0_2_1_fu_1964_p3 <= 
        ap_const_lv8_80 when (underflow_0_2_1_fu_1932_p2(0) = '1') else 
        accumulation_V_0_2_1_fu_1913_p2;
    p_5_0_2_2_fu_2203_p3 <= 
        ap_const_lv8_80 when (underflow_0_2_2_fu_2171_p2(0) = '1') else 
        accumulation_V_0_2_2_fu_2152_p2;
    p_5_0_2_fu_1810_p3 <= 
        ap_const_lv8_80 when (underflow_0_2_fu_1778_p2(0) = '1') else 
        accumulation_V_0_2_fu_1759_p2;
    p_5_fu_503_p2 <= std_logic_vector(unsigned(p_reg_418) + unsigned(ap_const_lv3_1));
    p_Val2_21_fu_2244_p2 <= std_logic_vector(signed(p_0461_5_0_2_2_reg_2975) + signed(p_Val2_24_cast_reg_2643));
        p_Val2_24_cast_fu_619_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_613_p2),8));

    p_Val2_25_fu_778_p2 <= std_logic_vector(unsigned(tmp_90_0_cast_fu_775_p1) + unsigned(p_Val2_24_reg_2709));
    p_Val2_26_fu_799_p3 <= 
        phitmp_fu_791_p3 when (tmp_1060_fu_783_p3(0) = '1') else 
        p_Val2_25_fu_778_p2;
    p_Val2_28_0_0_2_ca_fu_1027_p4 <= r_V_12_0_0_2_fu_1022_p2(9 downto 4);
    p_Val2_29_0_0_1_fu_901_p2 <= std_logic_vector(unsigned(tmp_90_0_0_1_cast_fu_898_p1) + unsigned(p_Val2_28_0_0_1_reg_2735));
    p_Val2_29_0_0_2_ca_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_29_0_0_2_reg_2790),8));
    p_Val2_29_0_0_2_fu_1049_p2 <= std_logic_vector(unsigned(p_Val2_28_0_0_2_ca_fu_1027_p4) + unsigned(tmp_90_0_0_2_cast_fu_1045_p1));
    p_Val2_29_0_1_1_fu_1378_p2 <= std_logic_vector(unsigned(tmp_90_0_1_1_cast_fu_1375_p1) + unsigned(tmp_104_fu_1372_p1));
    p_Val2_29_0_1_2_fu_1544_p2 <= std_logic_vector(unsigned(tmp_90_0_1_2_cast_fu_1541_p1) + unsigned(p_Val2_28_0_1_2_reg_2870));
    p_Val2_29_0_1_fu_1204_p2 <= std_logic_vector(unsigned(tmp_90_0_1_cast_fu_1201_p1) + unsigned(p_Val2_28_0_1_reg_2812));
    p_Val2_29_0_2_1_fu_1863_p2 <= std_logic_vector(unsigned(tmp_90_0_2_1_cast_fu_1860_p1) + unsigned(p_Val2_28_0_2_1_reg_2922));
    p_Val2_29_0_2_2_fu_2101_p2 <= std_logic_vector(unsigned(tmp_90_0_2_2_cast_fu_2098_p1) + unsigned(tmp_106_fu_2095_p1));
    p_Val2_29_0_2_fu_1709_p2 <= std_logic_vector(unsigned(tmp_90_0_2_cast_fu_1706_p1) + unsigned(p_Val2_28_0_2_reg_2896));
    p_Val2_30_0_0_1_fu_922_p3 <= 
        phitmp_0_0_1_fu_914_p3 when (tmp_1066_fu_906_p3(0) = '1') else 
        p_Val2_29_0_0_1_fu_901_p2;
    p_Val2_30_0_1_1_fu_1400_p3 <= 
        phitmp_0_1_1_fu_1392_p3 when (tmp_1082_fu_1384_p3(0) = '1') else 
        p_Val2_29_0_1_1_fu_1378_p2;
    p_Val2_30_0_1_2_fu_1565_p3 <= 
        phitmp_0_1_2_fu_1557_p3 when (tmp_1087_fu_1549_p3(0) = '1') else 
        p_Val2_29_0_1_2_fu_1544_p2;
    p_Val2_30_0_1_fu_1225_p3 <= 
        phitmp_0_1_fu_1217_p3 when (tmp_1077_fu_1209_p3(0) = '1') else 
        p_Val2_29_0_1_fu_1204_p2;
    p_Val2_30_0_2_1_fu_1884_p3 <= 
        phitmp_0_2_1_fu_1876_p3 when (tmp_1097_fu_1868_p3(0) = '1') else 
        p_Val2_29_0_2_1_fu_1863_p2;
    p_Val2_30_0_2_2_fu_2123_p3 <= 
        phitmp_0_2_2_fu_2115_p3 when (tmp_1102_fu_2107_p3(0) = '1') else 
        p_Val2_29_0_2_2_fu_2101_p2;
    p_Val2_30_0_2_fu_1730_p3 <= 
        phitmp_0_2_fu_1722_p3 when (tmp_1092_fu_1714_p3(0) = '1') else 
        p_Val2_29_0_2_fu_1709_p2;
    p_Val2_cast_fu_601_p3 <= 
        ap_const_lv2_3 when (tmp_1053_fu_593_p3(0) = '1') else 
        ap_const_lv2_0;
    p_Val2_s_fu_613_p2 <= std_logic_vector(unsigned(p_Val2_cast_fu_601_p3) + unsigned(tmp_76_cast_fu_609_p1));
    p_demorgan_fu_2082_p2 <= (tmp_1125_fu_2076_p2 and tmp_1124_fu_2070_p2);
    p_mux7_0_0_1_fu_994_p3 <= 
        ap_const_lv8_7F when (brmerge38_0_0_1_fu_976_p2(0) = '1') else 
        accumulation_V_0_0_1_fu_951_p2;
    p_mux7_0_0_2_fu_1132_p3 <= 
        ap_const_lv8_7F when (brmerge38_0_0_2_fu_1114_p2(0) = '1') else 
        accumulation_V_0_0_2_fu_1089_p2;
    p_mux7_0_1_1_fu_1472_p3 <= 
        ap_const_lv8_7F when (brmerge38_0_1_1_fu_1454_p2(0) = '1') else 
        accumulation_V_0_1_1_fu_1429_p2;
    p_mux7_0_1_2_fu_1637_p3 <= 
        ap_const_lv8_7F when (brmerge38_0_1_2_fu_1619_p2(0) = '1') else 
        accumulation_V_0_1_2_fu_1594_p2;
    p_mux7_0_1_fu_1297_p3 <= 
        ap_const_lv8_7F when (brmerge38_0_1_fu_1279_p2(0) = '1') else 
        accumulation_V_0_1_fu_1254_p2;
    p_mux7_0_2_1_fu_1956_p3 <= 
        ap_const_lv8_7F when (brmerge38_0_2_1_fu_1938_p2(0) = '1') else 
        accumulation_V_0_2_1_fu_1913_p2;
    p_mux7_0_2_2_fu_2195_p3 <= 
        ap_const_lv8_7F when (brmerge38_0_2_2_fu_2177_p2(0) = '1') else 
        accumulation_V_0_2_2_fu_2152_p2;
    p_mux7_0_2_fu_1802_p3 <= 
        ap_const_lv8_7F when (brmerge38_0_2_fu_1784_p2(0) = '1') else 
        accumulation_V_0_2_fu_1759_p2;
    p_mux_fu_2286_p3 <= 
        ap_const_lv8_7F when (brmerge_fu_2268_p2(0) = '1') else 
        p_Val2_21_fu_2244_p2;
    p_s_fu_2294_p3 <= 
        ap_const_lv8_80 when (underflow_12_fu_2262_p2(0) = '1') else 
        p_Val2_21_fu_2244_p2;
    p_shl1_cast_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_113_fu_535_p3),9));
    p_shl2_cast_fu_754_p3 <= (tmp_1054_fu_750_p1 & ap_const_lv4_0);
    p_shl3_cast_fu_2418_p3 <= (tmp_1128_fu_2414_p1 & ap_const_lv4_0);
    p_shl_cast_fu_531_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_111_fu_523_p3),9));
    p_v4_fu_1348_p3 <= 
        tmp_71_0_2_mid1_reg_2774 when (exitcond_reg_2662(0) = '1') else 
        tmp_71_0_s_reg_2762;
    p_v_fu_866_p3 <= 
        tmp_71_0_s_fu_860_p2 when (exitcond_reg_2662(0) = '1') else 
        row_reg_441;
    phitmp_0_0_1_fu_914_p3 <= 
        p_Val2_29_0_0_1_fu_901_p2 when (tmp_1064_fu_891_p3(0) = '1') else 
        ap_const_lv8_7F;
    phitmp_0_1_1_fu_1392_p3 <= 
        p_Val2_29_0_1_1_fu_1378_p2 when (tmp_1080_fu_1365_p3(0) = '1') else 
        ap_const_lv8_7F;
    phitmp_0_1_2_fu_1557_p3 <= 
        p_Val2_29_0_1_2_fu_1544_p2 when (tmp_1085_fu_1534_p3(0) = '1') else 
        ap_const_lv8_7F;
    phitmp_0_1_fu_1217_p3 <= 
        p_Val2_29_0_1_fu_1204_p2 when (tmp_1075_fu_1194_p3(0) = '1') else 
        ap_const_lv8_7F;
    phitmp_0_2_1_fu_1876_p3 <= 
        p_Val2_29_0_2_1_fu_1863_p2 when (tmp_1095_fu_1853_p3(0) = '1') else 
        ap_const_lv8_7F;
    phitmp_0_2_2_fu_2115_p3 <= 
        p_Val2_29_0_2_2_fu_2101_p2 when (tmp_1100_fu_2088_p3(0) = '1') else 
        ap_const_lv8_7F;
    phitmp_0_2_fu_1722_p3 <= 
        p_Val2_29_0_2_fu_1709_p2 when (tmp_1090_fu_1699_p3(0) = '1') else 
        ap_const_lv8_7F;
    phitmp_fu_791_p3 <= 
        p_Val2_25_fu_778_p2 when (tmp_1058_fu_768_p3(0) = '1') else 
        ap_const_lv8_7F;
    r_V_12_0_0_1_fu_811_p0 <= tmp_86_0_0_1_reg_2603(4 - 1 downto 0);
    r_V_12_0_0_1_fu_811_p1 <= r_V_12_0_0_1_fu_811_p10(8 - 1 downto 0);
    r_V_12_0_0_1_fu_811_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_V_q0),12));
    r_V_12_0_0_1_fu_811_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_0_0_1_fu_811_p0) * signed('0' &r_V_12_0_0_1_fu_811_p1))), 12));
    r_V_12_0_0_2_fu_1022_p0 <= tmp_86_0_0_2_cast_reg_2608(2 - 1 downto 0);
    r_V_12_0_0_2_fu_1022_p1 <= r_V_12_0_0_2_fu_1022_p10(8 - 1 downto 0);
    r_V_12_0_0_2_fu_1022_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_V_q0),10));
    r_V_12_0_0_2_fu_1022_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_12_0_0_2_fu_1022_p0) * unsigned(r_V_12_0_0_2_fu_1022_p1), 10));
    r_V_12_0_1_1_fu_1325_p0 <= tmp_86_0_1_1_cast_reg_2618(3 - 1 downto 0);
    r_V_12_0_1_1_fu_1325_p1 <= r_V_12_0_1_1_fu_1325_p10(8 - 1 downto 0);
    r_V_12_0_1_1_fu_1325_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_V_q0),11));
    r_V_12_0_1_1_fu_1325_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_0_1_1_fu_1325_p0) * signed('0' &r_V_12_0_1_1_fu_1325_p1))), 11));
    r_V_12_0_1_2_fu_1500_p0 <= tmp_86_0_1_2_reg_2623(4 - 1 downto 0);
    r_V_12_0_1_2_fu_1500_p1 <= r_V_12_0_1_2_fu_1500_p10(8 - 1 downto 0);
    r_V_12_0_1_2_fu_1500_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_V_q0),12));
    r_V_12_0_1_2_fu_1500_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_0_1_2_fu_1500_p0) * signed('0' &r_V_12_0_1_2_fu_1500_p1))), 12));
    r_V_12_0_1_fu_1160_p0 <= tmp_86_0_1_reg_2613(4 - 1 downto 0);
    r_V_12_0_1_fu_1160_p1 <= r_V_12_0_1_fu_1160_p10(8 - 1 downto 0);
    r_V_12_0_1_fu_1160_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_V_q0),12));
    r_V_12_0_1_fu_1160_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_0_1_fu_1160_p0) * signed('0' &r_V_12_0_1_fu_1160_p1))), 12));
    r_V_12_0_2_1_fu_1830_p0 <= tmp_86_0_2_1_reg_2633(4 - 1 downto 0);
    r_V_12_0_2_1_fu_1830_p1 <= r_V_12_0_2_1_fu_1830_p10(8 - 1 downto 0);
    r_V_12_0_2_1_fu_1830_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_V_q0),12));
    r_V_12_0_2_1_fu_1830_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_0_2_1_fu_1830_p0) * signed('0' &r_V_12_0_2_1_fu_1830_p1))), 12));
    r_V_12_0_2_2_fu_1984_p0 <= tmp_86_0_2_2_cast_reg_2638(3 - 1 downto 0);
    r_V_12_0_2_2_fu_1984_p1 <= r_V_12_0_2_2_fu_1984_p10(8 - 1 downto 0);
    r_V_12_0_2_2_fu_1984_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_V_q0),11));
    r_V_12_0_2_2_fu_1984_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_0_2_2_fu_1984_p0) * signed('0' &r_V_12_0_2_2_fu_1984_p1))), 11));
    r_V_12_0_2_fu_1665_p0 <= tmp_86_0_2_reg_2628(4 - 1 downto 0);
    r_V_12_0_2_fu_1665_p1 <= r_V_12_0_2_fu_1665_p10(8 - 1 downto 0);
    r_V_12_0_2_fu_1665_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_V_q0),12));
    r_V_12_0_2_fu_1665_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_0_2_fu_1665_p0) * signed('0' &r_V_12_0_2_fu_1665_p1))), 12));
    r_V_12_fu_704_p0 <= tmp_86_reg_2598(4 - 1 downto 0);
    r_V_12_fu_704_p1 <= r_V_12_fu_704_p10(8 - 1 downto 0);
    r_V_12_fu_704_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_V_q0),12));
    r_V_12_fu_704_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_fu_704_p0) * signed('0' &r_V_12_fu_704_p1))), 12));
    ret_V_0_0_1_fu_937_p2 <= std_logic_vector(signed(lhs_V_5_0_0_1_fu_930_p1) + signed(rhs_V_6_0_0_1_fu_933_p1));
    ret_V_0_0_2_fu_1075_p2 <= std_logic_vector(unsigned(rhs_V_6_0_0_2_fu_1072_p1) + unsigned(lhs_V_5_0_0_2_fu_1069_p1));
    ret_V_0_1_1_fu_1415_p2 <= std_logic_vector(signed(lhs_V_5_0_1_1_fu_1408_p1) + signed(rhs_V_6_0_1_1_fu_1411_p1));
    ret_V_0_1_2_fu_1580_p2 <= std_logic_vector(signed(lhs_V_5_0_1_2_fu_1573_p1) + signed(rhs_V_6_0_1_2_fu_1576_p1));
    ret_V_0_1_fu_1240_p2 <= std_logic_vector(signed(lhs_V_5_0_1_fu_1233_p1) + signed(rhs_V_6_0_1_fu_1236_p1));
    ret_V_0_2_1_fu_1899_p2 <= std_logic_vector(signed(lhs_V_5_0_2_1_fu_1892_p1) + signed(rhs_V_6_0_2_1_fu_1895_p1));
    ret_V_0_2_2_fu_2138_p2 <= std_logic_vector(signed(lhs_V_5_0_2_2_fu_2131_p1) + signed(rhs_V_6_0_2_2_fu_2134_p1));
    ret_V_0_2_fu_1745_p2 <= std_logic_vector(signed(lhs_V_5_0_2_fu_1738_p1) + signed(rhs_V_6_0_2_fu_1741_p1));
    ret_V_7_fu_2231_p2 <= std_logic_vector(signed(lhs_V_reg_2648) + signed(rhs_V_fu_2228_p1));
        rhs_V_6_0_0_1_fu_933_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_30_0_0_1_fu_922_p3),9));

    rhs_V_6_0_0_2_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_29_0_0_2_reg_2790),9));
        rhs_V_6_0_1_1_fu_1411_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_30_0_1_1_fu_1400_p3),9));

        rhs_V_6_0_1_2_fu_1576_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_30_0_1_2_fu_1565_p3),9));

        rhs_V_6_0_1_fu_1236_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_30_0_1_fu_1225_p3),9));

        rhs_V_6_0_2_1_fu_1895_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_30_0_2_1_fu_1884_p3),9));

        rhs_V_6_0_2_2_fu_2134_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_30_0_2_2_fu_2123_p3),9));

        rhs_V_6_0_2_fu_1741_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_30_0_2_fu_1730_p3),9));

        rhs_V_fu_2228_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0461_5_0_2_2_reg_2975),9));

    row_3_fu_2373_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(ap_phi_mux_row1_phi_fu_479_p4));
    signbit_i_i122_0_not_103_fu_1285_p2 <= (tmp_1078_fu_1246_p3 xor ap_const_lv1_1);
    signbit_i_i122_0_not_104_fu_1460_p2 <= (tmp_1083_fu_1421_p3 xor ap_const_lv1_1);
    signbit_i_i122_0_not_105_fu_1625_p2 <= (tmp_1088_fu_1586_p3 xor ap_const_lv1_1);
    signbit_i_i122_0_not_106_fu_1790_p2 <= (tmp_1093_fu_1751_p3 xor ap_const_lv1_1);
    signbit_i_i122_0_not_107_fu_1944_p2 <= (tmp_1098_fu_1905_p3 xor ap_const_lv1_1);
    signbit_i_i122_0_not_108_fu_2183_p2 <= (tmp_1103_fu_2144_p3 xor ap_const_lv1_1);
    signbit_i_i122_0_not_109_fu_1120_p2 <= (tmp_1073_fu_1081_p3 xor ap_const_lv1_1);
    signbit_i_i122_0_not_fu_982_p2 <= (tmp_1067_fu_943_p3 xor ap_const_lv1_1);
    signbit_i_i_i_i77_0_s_fu_2274_p2 <= (tmp_1105_fu_2236_p3 xor ap_const_lv1_1);
        tmp_104_fu_1372_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_103_reg_2838),8));

    tmp_1053_fu_593_p3 <= conv_1_biases_V_q0(2 downto 2);
    tmp_1054_fu_750_p1 <= tmp_118_fu_741_p2(9 - 1 downto 0);
    tmp_1055_fu_673_p3 <= (tmp_68_mid2_v_fu_659_p3 & tmp_83_fu_667_p2);
    tmp_1056_fu_879_p3 <= (p_v_fu_866_p3 & tmp_83_reg_2683);
    tmp_1057_fu_1353_p3 <= (p_v4_fu_1348_p3 & tmp_83_reg_2683);
    tmp_1058_fu_768_p3 <= r_V_12_reg_2704(11 downto 11);
    tmp_1060_fu_783_p3 <= p_Val2_25_fu_778_p2(7 downto 7);
    tmp_1061_fu_727_p3 <= (tmp_68_mid2_v_reg_2676 & col_mid2_reg_2668);
    tmp_1062_fu_1055_p3 <= (p_v_reg_2767 & col_mid2_reg_2668);
    tmp_1063_fu_1523_p3 <= (p_v4_reg_2848 & col_mid2_reg_2668);
    tmp_1064_fu_891_p3 <= r_V_12_0_0_1_reg_2730(10 downto 10);
    tmp_1066_fu_906_p3 <= p_Val2_29_0_0_1_fu_901_p2(7 downto 7);
    tmp_1067_fu_943_p3 <= ret_V_0_0_1_fu_937_p2(8 downto 8);
    tmp_1068_fu_956_p3 <= accumulation_V_0_0_1_fu_951_p2(7 downto 7);
    tmp_1069_fu_839_p3 <= (tmp_68_mid2_v_reg_2676 & tmp_83_0_0_2_fu_834_p2);
        tmp_106_fu_2095_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_105_reg_2943),8));

    tmp_1070_fu_1183_p3 <= (p_v_reg_2767 & tmp_83_0_0_2_reg_2745);
    tmp_1071_fu_1688_p3 <= (p_v4_reg_2848 & tmp_83_0_0_2_reg_2745);
    tmp_1072_fu_1037_p3 <= r_V_12_0_0_2_fu_1022_p2(3 downto 3);
    tmp_1073_fu_1081_p3 <= ret_V_0_0_2_fu_1075_p2(8 downto 8);
    tmp_1074_fu_1094_p3 <= accumulation_V_0_0_2_fu_1089_p2(7 downto 7);
    tmp_1075_fu_1194_p3 <= r_V_12_0_1_reg_2807(11 downto 11);
    tmp_1077_fu_1209_p3 <= p_Val2_29_0_1_fu_1204_p2(7 downto 7);
    tmp_1078_fu_1246_p3 <= ret_V_0_1_fu_1240_p2(8 downto 8);
    tmp_1079_fu_1259_p3 <= accumulation_V_0_1_fu_1254_p2(7 downto 7);
    tmp_1080_fu_1365_p3 <= r_V_12_0_1_1_reg_2833(10 downto 10);
    tmp_1082_fu_1384_p3 <= p_Val2_29_0_1_1_fu_1378_p2(7 downto 7);
    tmp_1083_fu_1421_p3 <= ret_V_0_1_1_fu_1415_p2(8 downto 8);
    tmp_1084_fu_1434_p3 <= accumulation_V_0_1_1_fu_1429_p2(7 downto 7);
    tmp_1085_fu_1534_p3 <= r_V_12_0_1_2_reg_2865(11 downto 11);
    tmp_1087_fu_1549_p3 <= p_Val2_29_0_1_2_fu_1544_p2(7 downto 7);
    tmp_1088_fu_1586_p3 <= ret_V_0_1_2_fu_1580_p2(8 downto 8);
    tmp_1089_fu_1599_p3 <= accumulation_V_0_1_2_fu_1594_p2(7 downto 7);
    tmp_108_cast_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1108_reg_2699),13));
    tmp_1090_fu_1699_p3 <= r_V_12_0_2_reg_2891(11 downto 11);
    tmp_1092_fu_1714_p3 <= p_Val2_29_0_2_fu_1709_p2(7 downto 7);
    tmp_1093_fu_1751_p3 <= ret_V_0_2_fu_1745_p2(8 downto 8);
    tmp_1094_fu_1764_p3 <= accumulation_V_0_2_fu_1759_p2(7 downto 7);
    tmp_1095_fu_1853_p3 <= r_V_12_0_2_1_reg_2917(11 downto 11);
    tmp_1097_fu_1868_p3 <= p_Val2_29_0_2_1_fu_1863_p2(7 downto 7);
    tmp_1098_fu_1905_p3 <= ret_V_0_2_1_fu_1899_p2(8 downto 8);
    tmp_1099_fu_1918_p3 <= accumulation_V_0_2_1_fu_1913_p2(7 downto 7);
    tmp_109_fu_2012_p3 <= (tmp_151_cast_cast_fu_2007_p2 & ap_const_lv3_0);
    tmp_1100_fu_2088_p3 <= r_V_12_0_2_2_reg_2938(10 downto 10);
    tmp_1102_fu_2107_p3 <= p_Val2_29_0_2_2_fu_2101_p2(7 downto 7);
    tmp_1103_fu_2144_p3 <= ret_V_0_2_2_fu_2138_p2(8 downto 8);
    tmp_1104_fu_2157_p3 <= accumulation_V_0_2_2_fu_2152_p2(7 downto 7);
    tmp_1105_fu_2236_p3 <= ret_V_7_fu_2231_p2(8 downto 8);
    tmp_1106_fu_2248_p3 <= p_Val2_21_fu_2244_p2(7 downto 7);
    tmp_1107_fu_686_p1 <= col_mid2_fu_645_p3(1 - 1 downto 0);
    tmp_1109_fu_2026_p2 <= "1" when (unsigned(tmp_109_fu_2012_p3) > unsigned(tmp_110_fu_2020_p2)) else "0";
    tmp_110_fu_2020_p2 <= (tmp_109_fu_2012_p3 or ap_const_lv4_7);
    tmp_1110_fu_2032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_109_fu_2012_p3),5));
    tmp_1111_fu_2036_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_110_fu_2020_p2),5));
    tmp_1112_fu_2310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0306_1_fu_2302_p3),16));
    tmp_1113_fu_2314_p2 <= (tmp_1110_reg_2964 xor ap_const_lv5_F);
    tmp_1114_fu_2040_p3 <= 
        tmp_1110_fu_2032_p1 when (tmp_1109_fu_2026_p2(0) = '1') else 
        tmp_1111_fu_2036_p1;
    tmp_1115_fu_2048_p3 <= 
        tmp_1111_fu_2036_p1 when (tmp_1109_fu_2026_p2(0) = '1') else 
        tmp_1110_fu_2032_p1;
    tmp_1116_fu_2319_p3 <= 
        tmp_1113_fu_2314_p2 when (tmp_1109_reg_2958(0) = '1') else 
        tmp_1110_reg_2964;
    tmp_1117_fu_2056_p2 <= (tmp_1114_fu_2040_p3 xor ap_const_lv5_F);
    tmp_1118_fu_2325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1116_fu_2319_p3),16));
    tmp_1119_fu_2062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1115_fu_2048_p3),16));
    tmp_111_fu_523_p3 <= (p_reg_418 & ap_const_lv5_0);
    tmp_1120_fu_2066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1117_fu_2056_p2),16));
    tmp_1121_fu_2329_p2 <= std_logic_vector(shift_left(unsigned(tmp_1112_fu_2310_p1),to_integer(unsigned('0' & tmp_1118_fu_2325_p1(16-1 downto 0)))));
    
    tmp_1122_fu_2335_p4_proc : process(tmp_1121_fu_2329_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_1122_fu_2335_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_1121_fu_2329_p2;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for tmp_1122_fu_2335_p4_i in 0 to 16-1 loop
                v0_cpy(tmp_1122_fu_2335_p4_i) := tmp_1121_fu_2329_p2(16-1-tmp_1122_fu_2335_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_1122_fu_2335_p4 <= resvalue(16-1 downto 0);
    end process;

    tmp_1123_fu_2345_p3 <= 
        tmp_1122_fu_2335_p4 when (tmp_1109_reg_2958(0) = '1') else 
        tmp_1121_fu_2329_p2;
    tmp_1124_fu_2070_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & tmp_1119_fu_2062_p1(16-1 downto 0)))));
    tmp_1125_fu_2076_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & tmp_1120_fu_2066_p1(16-1 downto 0)))));
    tmp_1126_fu_2352_p2 <= (tmp_1123_fu_2345_p3 and p_demorgan_reg_2970);
    tmp_1127_fu_2219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_151_cast_cast_reg_2953),2));
    tmp_1128_fu_2414_p1 <= tmp_131_fu_2405_p2(9 - 1 downto 0);
    tmp_1129_fu_2432_p4 <= col2_mid2_fu_2385_p3(4 downto 1);
    tmp_1130_fu_2463_p1 <= output_V_q0(8 - 1 downto 0);
    tmp_1131_fu_2467_p1 <= output_V_q0(7 - 1 downto 0);
    tmp_113_fu_535_p3 <= (p_reg_418 & ap_const_lv1_0);
    tmp_114_cast_fu_2442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1129_fu_2432_p4),13));
    tmp_114_fu_547_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_531_p1) - unsigned(p_shl1_cast_fu_543_p1));
    tmp_115_fu_653_p2 <= std_logic_vector(signed(ap_const_lv5_1F) + signed(ap_phi_mux_row_phi_fu_445_p4));
    tmp_116_fu_2485_p4 <= output_V_q0(15 downto 8);
    tmp_118_fu_741_p2 <= std_logic_vector(signed(tmp_238_cast_reg_2592) + signed(tmp_68_mid2_cast_fu_738_p1));
    tmp_119_fu_2522_p3 <= (tmp_150_s_reg_3021 & p_0514_2_cast_fu_2519_p1);
    tmp_120_fu_762_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_754_p3) - unsigned(tmp_242_cast_fu_746_p1));
    tmp_121_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1055_fu_673_p3),64));
    tmp_122_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1056_fu_879_p3),64));
    tmp_123_fu_1360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1057_fu_1353_p3),64));
    tmp_124_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1061_fu_727_p3),64));
    tmp_125_fu_1061_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1062_fu_1055_p3),64));
    tmp_126_fu_1529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1063_fu_1523_p3),64));
    tmp_127_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1069_fu_839_p3),64));
    tmp_128_fu_1189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1070_fu_1183_p3),64));
    tmp_129_fu_1694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1071_fu_1688_p3),64));
    tmp_130_fu_854_p2 <= std_logic_vector(unsigned(tmp_120_fu_762_p2) + unsigned(tmp_108_cast_fu_851_p1));
    tmp_131_fu_2405_p2 <= std_logic_vector(signed(tmp_238_cast_reg_2592) + signed(tmp_mid2_cast_fu_2401_p1));
    tmp_132_fu_2426_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_2418_p3) - unsigned(tmp_261_cast_fu_2410_p1));
    tmp_133_fu_2446_p2 <= std_logic_vector(unsigned(tmp_132_fu_2426_p2) + unsigned(tmp_114_cast_fu_2442_p1));
    tmp_149_cast_fu_2495_p4 <= output_V_q0(14 downto 8);
    tmp_150_s_fu_2511_p3 <= 
        tmp_149_cast_fu_2495_p4 when (tmp_70_1_fu_2505_p2(0) = '1') else 
        ap_const_lv7_0;
    tmp_151_cast_cast_fu_2007_p2 <= (tmp_1107_reg_2694 xor ap_const_lv1_1);
        tmp_238_cast_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_114_fu_547_p2),10));

        tmp_242_cast_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_118_fu_741_p2),13));

    tmp_260_cast_fu_2357_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_130_reg_2757_pp0_iter1_reg),64));
        tmp_261_cast_fu_2410_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_131_fu_2405_p2),13));

    tmp_264_cast_fu_2452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_133_fu_2446_p2),64));
    tmp_68_mid2_cast_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_mid2_v_reg_2676),10));
    tmp_68_mid2_v_fu_659_p3 <= 
        ap_phi_mux_row_phi_fu_445_p4 when (exitcond_fu_639_p2(0) = '1') else 
        tmp_115_fu_653_p2;
    tmp_70_1_fu_2505_p2 <= "1" when (signed(tmp_116_fu_2485_p4) > signed(ap_const_lv8_0)) else "0";
    tmp_70_fu_2471_p2 <= "1" when (signed(tmp_1130_fu_2463_p1) > signed(ap_const_lv8_0)) else "0";
    tmp_71_0_2_mid1_fu_873_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(row_reg_441));
    tmp_71_0_s_fu_860_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(row_reg_441));
    tmp_76_cast_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1053_fu_593_p3),2));
    tmp_80_fu_2256_p2 <= (tmp_1106_fu_2248_p3 xor ap_const_lv1_1);
    tmp_83_0_0_2_fu_834_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(col_mid2_reg_2668));
    tmp_83_fu_667_p2 <= std_logic_vector(signed(ap_const_lv5_1F) + signed(col_mid2_fu_645_p3));
        tmp_86_0_0_1_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_1_weights_V_0_0_1_q0),12));

    tmp_86_0_0_2_cast_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_1_weights_V_0_0_2_q0),10));
        tmp_86_0_1_1_cast_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_1_weights_V_0_1_1_q0),11));

        tmp_86_0_1_2_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_1_weights_V_0_1_2_q0),12));

        tmp_86_0_1_fu_569_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_1_weights_V_0_1_q0),12));

        tmp_86_0_2_1_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_1_weights_V_0_2_1_q0),12));

        tmp_86_0_2_2_cast_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_1_weights_V_0_2_2_q0),11));

        tmp_86_0_2_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_1_weights_V_0_2_q0),12));

        tmp_86_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_1_weights_V_0_0_q0),12));

    tmp_90_0_0_1_cast_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1065_reg_2740),8));
    tmp_90_0_0_2_cast_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1072_fu_1037_p3),6));
    tmp_90_0_1_1_cast_fu_1375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1081_reg_2843),8));
    tmp_90_0_1_2_cast_fu_1541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1086_reg_2875),8));
    tmp_90_0_1_cast_fu_1201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1076_reg_2817),8));
    tmp_90_0_2_1_cast_fu_1860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1096_reg_2927),8));
    tmp_90_0_2_2_cast_fu_2098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1101_reg_2948),8));
    tmp_90_0_2_cast_fu_1706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1091_reg_2901),8));
    tmp_90_0_cast_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1059_reg_2714),8));
    tmp_92_0_0_1_fu_964_p2 <= (tmp_1068_fu_956_p3 xor ap_const_lv1_1);
    tmp_92_0_0_2_fu_1102_p2 <= (tmp_1074_fu_1094_p3 xor ap_const_lv1_1);
    tmp_92_0_1_1_fu_1442_p2 <= (tmp_1084_fu_1434_p3 xor ap_const_lv1_1);
    tmp_92_0_1_2_fu_1607_p2 <= (tmp_1089_fu_1599_p3 xor ap_const_lv1_1);
    tmp_92_0_1_fu_1267_p2 <= (tmp_1079_fu_1259_p3 xor ap_const_lv1_1);
    tmp_92_0_2_1_fu_1926_p2 <= (tmp_1099_fu_1918_p3 xor ap_const_lv1_1);
    tmp_92_0_2_2_fu_2165_p2 <= (tmp_1104_fu_2157_p3 xor ap_const_lv1_1);
    tmp_92_0_2_fu_1772_p2 <= (tmp_1094_fu_1764_p3 xor ap_const_lv1_1);
    tmp_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_reg_418),64));
    tmp_mid2_cast_fu_2401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_v_fu_2393_p3),10));
    tmp_mid2_v_fu_2393_p3 <= 
        row_3_fu_2373_p2 when (exitcond2_fu_2379_p2(0) = '1') else 
        ap_phi_mux_row1_phi_fu_479_p4;
    underflow_0_0_1_fu_970_p2 <= (tmp_92_0_0_1_fu_964_p2 and tmp_1067_fu_943_p3);
    underflow_0_0_2_fu_1108_p2 <= (tmp_92_0_0_2_fu_1102_p2 and tmp_1073_fu_1081_p3);
    underflow_0_1_1_fu_1448_p2 <= (tmp_92_0_1_1_fu_1442_p2 and tmp_1083_fu_1421_p3);
    underflow_0_1_2_fu_1613_p2 <= (tmp_92_0_1_2_fu_1607_p2 and tmp_1088_fu_1586_p3);
    underflow_0_1_fu_1273_p2 <= (tmp_92_0_1_fu_1267_p2 and tmp_1078_fu_1246_p3);
    underflow_0_2_1_fu_1932_p2 <= (tmp_92_0_2_1_fu_1926_p2 and tmp_1098_fu_1905_p3);
    underflow_0_2_2_fu_2171_p2 <= (tmp_92_0_2_2_fu_2165_p2 and tmp_1103_fu_2144_p3);
    underflow_0_2_fu_1778_p2 <= (tmp_92_0_2_fu_1772_p2 and tmp_1093_fu_1751_p3);
    underflow_12_fu_2262_p2 <= (tmp_80_fu_2256_p2 and tmp_1105_fu_2236_p3);
end behav;
